
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "CONJ DISJ ELSE EQUALS FALSE FOR GREATEQUAL ID IF INT LOWEREQUAL NOTEQUAL NUM PRINT READ TRUE WHILEPrograma : BlocoDeclarativo BlocoInstrutivo BlocoDeclarativo :  BlocoDeclarativo : BlocoDeclarativo Declaracao ';' BlocoInstrutivo :  BlocoInstrutivo : BlocoInstrutivo Instrucao ';' Declaracao : INT ID Declaracao : INT ID '[' NUM ']' Instrucao : AtribuicaoInstrucao : IF '(' Condicao ')' '{' BlocoInstrutivo '}' ELSE '{' BlocoInstrutivo '}'Instrucao : IF '(' Condicao ')' '{' BlocoInstrutivo '}'Instrucao : FOR '(' Atribuicao ';' Condicao ';' Atribuicao ')' '{' BlocoInstrutivo '}'Instrucao : WHILE '(' Condicao ')' '{' BlocoInstrutivo '}' Instrucao : PRINT '(' ID ')' Instrucao : PRINT '(' Exp ')' Instrucao : PRINT '(' ID '[' Exp ']' ')' Atribuicao : ID '=' Exp Atribuicao : ID '[' Exp ']' '=' Exp Atribuicao : ID '=' READ '(' ')' Atribuicao : ID '[' Exp ']' '=' READ '(' ')'Condicao : Condicao EQUALS AfirmacaoCondicao : Condicao CONJ AfirmacaoCondicao : Condicao DISJ AfirmacaoCondicao : Condicao NOTEQUAL AfirmacaoCondicao : AfirmacaoAfirmacao : '!' AfirmacaoAfirmacao : TRUEAfirmacao : FALSEAfirmacao : Exp '>' ExpAfirmacao : Exp '<' ExpAfirmacao : Exp GREATEQUAL ExpAfirmacao : Exp LOWEREQUAL ExpAfirmacao : Exp EQUALS ExpAfirmacao : Exp NOTEQUAL Exp Exp : Exp '+' Termo Exp : Exp '-' TermoExp : TermoTermo : Termo '*' FatorTermo : Termo '/' FatorTermo : Termo '%' FatorTermo : FatorFator : ID '[' Exp ']'Fator : NUMFator : IDFator : '(' Exp ')'"
    
_lr_action_items = {'INT':([0,2,13,],[-2,5,-3,]),'IF':([0,2,3,13,15,70,88,92,95,107,108,109,110,],[-2,-4,8,-3,-5,-4,-4,8,8,-4,-4,8,8,]),'FOR':([0,2,3,13,15,70,88,92,95,107,108,109,110,],[-2,-4,9,-3,-5,-4,-4,9,9,-4,-4,9,9,]),'WHILE':([0,2,3,13,15,70,88,92,95,107,108,109,110,],[-2,-4,10,-3,-5,-4,-4,10,10,-4,-4,10,10,]),'PRINT':([0,2,3,13,15,70,88,92,95,107,108,109,110,],[-2,-4,11,-3,-5,-4,-4,11,11,-4,-4,11,11,]),'ID':([0,2,3,5,13,15,16,17,18,19,20,21,23,26,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,64,70,88,91,92,94,95,107,108,109,110,],[-2,-4,12,14,-3,-5,32,12,32,36,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-4,-4,32,12,12,12,-4,-4,12,12,]),'$end':([0,1,2,3,13,15,],[-2,0,-4,-1,-3,-5,]),';':([4,6,7,14,25,27,28,30,31,32,33,34,38,48,63,65,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,90,93,97,99,101,102,106,111,112,],[13,15,-8,-6,-24,-26,-27,-36,-40,-43,-42,61,-16,-25,-13,-14,-7,-44,-20,-21,-22,-23,-28,-29,-30,-31,-32,-33,-34,-35,-37,-38,-39,94,-18,-41,-17,-10,-12,-15,-19,-9,-11,]),'(':([8,9,10,11,16,18,19,20,21,23,26,39,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,64,91,98,],[16,17,18,19,23,23,23,23,23,23,23,66,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,103,]),'=':([12,67,],[20,91,]),'[':([12,14,32,36,],[21,22,60,64,]),'}':([15,70,88,92,95,107,108,109,110,],[-5,-4,-4,99,101,-4,-4,111,112,]),'!':([16,18,26,44,45,46,47,61,],[26,26,26,26,26,26,26,26,]),'TRUE':([16,18,26,44,45,46,47,61,],[27,27,27,27,27,27,27,27,]),'FALSE':([16,18,26,44,45,46,47,61,],[28,28,28,28,28,28,28,28,]),'NUM':([16,18,19,20,21,22,23,26,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,64,91,],[33,33,33,33,33,41,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'READ':([20,91,],[39,98,]),')':([24,25,27,28,30,31,32,33,35,36,37,38,42,48,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,93,96,97,100,103,106,],[43,-24,-26,-27,-36,-40,-43,-42,62,63,65,-16,69,-25,90,-44,-20,-21,-22,-23,-28,-29,-30,-31,-32,-33,-34,-35,-37,-38,-39,-18,-41,102,-17,105,106,-19,]),'EQUALS':([24,25,27,28,29,30,31,32,33,35,48,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,93,],[44,-24,-26,-27,53,-36,-40,-43,-42,44,-25,-44,-20,-21,-22,-23,-28,-29,-30,-31,-32,-33,-34,-35,-37,-38,-39,44,-41,]),'CONJ':([24,25,27,28,30,31,32,33,35,48,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,93,],[45,-24,-26,-27,-36,-40,-43,-42,45,-25,-44,-20,-21,-22,-23,-28,-29,-30,-31,-32,-33,-34,-35,-37,-38,-39,45,-41,]),'DISJ':([24,25,27,28,30,31,32,33,35,48,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,93,],[46,-24,-26,-27,-36,-40,-43,-42,46,-25,-44,-20,-21,-22,-23,-28,-29,-30,-31,-32,-33,-34,-35,-37,-38,-39,46,-41,]),'NOTEQUAL':([24,25,27,28,29,30,31,32,33,35,48,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,93,],[47,-24,-26,-27,54,-36,-40,-43,-42,47,-25,-44,-20,-21,-22,-23,-28,-29,-30,-31,-32,-33,-34,-35,-37,-38,-39,47,-41,]),'>':([29,30,31,32,33,69,81,82,83,84,85,93,],[49,-36,-40,-43,-42,-44,-34,-35,-37,-38,-39,-41,]),'<':([29,30,31,32,33,69,81,82,83,84,85,93,],[50,-36,-40,-43,-42,-44,-34,-35,-37,-38,-39,-41,]),'GREATEQUAL':([29,30,31,32,33,69,81,82,83,84,85,93,],[51,-36,-40,-43,-42,-44,-34,-35,-37,-38,-39,-41,]),'LOWEREQUAL':([29,30,31,32,33,69,81,82,83,84,85,93,],[52,-36,-40,-43,-42,-44,-34,-35,-37,-38,-39,-41,]),'+':([29,30,31,32,33,36,37,38,40,42,69,75,76,77,78,79,80,81,82,83,84,85,86,89,93,96,97,],[55,-36,-40,-43,-42,-43,55,55,55,55,-44,55,55,55,55,55,55,-34,-35,-37,-38,-39,55,55,-41,-41,55,]),'-':([29,30,31,32,33,36,37,38,40,42,69,75,76,77,78,79,80,81,82,83,84,85,86,89,93,96,97,],[56,-36,-40,-43,-42,-43,56,56,56,56,-44,56,56,56,56,56,56,-34,-35,-37,-38,-39,56,56,-41,-41,56,]),']':([30,31,32,33,40,41,69,81,82,83,84,85,86,89,93,],[-36,-40,-43,-42,67,68,-44,-34,-35,-37,-38,-39,93,96,-41,]),'*':([30,31,32,33,36,69,81,82,83,84,85,93,96,],[57,-40,-43,-42,-43,-44,57,57,-37,-38,-39,-41,-41,]),'/':([30,31,32,33,36,69,81,82,83,84,85,93,96,],[58,-40,-43,-42,-43,-44,58,58,-37,-38,-39,-41,-41,]),'%':([30,31,32,33,36,69,81,82,83,84,85,93,96,],[59,-40,-43,-42,-43,-44,59,59,-37,-38,-39,-41,-41,]),'{':([43,62,104,105,],[70,88,107,108,]),'ELSE':([99,],[104,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Programa':([0,],[1,]),'BlocoDeclarativo':([0,],[2,]),'BlocoInstrutivo':([2,70,88,107,108,],[3,92,95,109,110,]),'Declaracao':([2,],[4,]),'Instrucao':([3,92,95,109,110,],[6,6,6,6,6,]),'Atribuicao':([3,17,92,94,95,109,110,],[7,34,7,100,7,7,7,]),'Condicao':([16,18,61,],[24,35,87,]),'Afirmacao':([16,18,26,44,45,46,47,61,],[25,25,48,71,72,73,74,25,]),'Exp':([16,18,19,20,21,23,26,44,45,46,47,49,50,51,52,53,54,60,61,64,91,],[29,29,37,38,40,42,29,29,29,29,29,75,76,77,78,79,80,86,29,89,97,]),'Termo':([16,18,19,20,21,23,26,44,45,46,47,49,50,51,52,53,54,55,56,60,61,64,91,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,81,82,30,30,30,30,]),'Fator':([16,18,19,20,21,23,26,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,64,91,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,83,84,85,31,31,31,31,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Programa","S'",1,None,None,None),
  ('Programa -> BlocoDeclarativo BlocoInstrutivo','Programa',2,'p_Programa','compilador_yacc.py',39),
  ('BlocoDeclarativo -> <empty>','BlocoDeclarativo',0,'p_BlocoDeclarativo_fim','compilador_yacc.py',44),
  ('BlocoDeclarativo -> BlocoDeclarativo Declaracao ;','BlocoDeclarativo',3,'p_BlocoDeclarativo','compilador_yacc.py',49),
  ('BlocoInstrutivo -> <empty>','BlocoInstrutivo',0,'p_BlocoInstrutivo_fim','compilador_yacc.py',54),
  ('BlocoInstrutivo -> BlocoInstrutivo Instrucao ;','BlocoInstrutivo',3,'p_BlocoInstrutivo','compilador_yacc.py',59),
  ('Declaracao -> INT ID','Declaracao',2,'p_Declaracao_d','compilador_yacc.py',64),
  ('Declaracao -> INT ID [ NUM ]','Declaracao',5,'p_Declaracao_array','compilador_yacc.py',70),
  ('Instrucao -> Atribuicao','Instrucao',1,'p_Instrucao_atrib','compilador_yacc.py',76),
  ('Instrucao -> IF ( Condicao ) { BlocoInstrutivo } ELSE { BlocoInstrutivo }','Instrucao',11,'p_Instrucao_if_else','compilador_yacc.py',81),
  ('Instrucao -> IF ( Condicao ) { BlocoInstrutivo }','Instrucao',7,'p_Instrucao_if','compilador_yacc.py',87),
  ('Instrucao -> FOR ( Atribuicao ; Condicao ; Atribuicao ) { BlocoInstrutivo }','Instrucao',11,'p_Instrucao_for','compilador_yacc.py',93),
  ('Instrucao -> WHILE ( Condicao ) { BlocoInstrutivo }','Instrucao',7,'p_Instrucao_while','compilador_yacc.py',100),
  ('Instrucao -> PRINT ( ID )','Instrucao',4,'p_Instrucao_print','compilador_yacc.py',107),
  ('Instrucao -> PRINT ( Exp )','Instrucao',4,'p_Instrucao_print_num','compilador_yacc.py',116),
  ('Instrucao -> PRINT ( ID [ Exp ] )','Instrucao',7,'p_Instrucao_printArray','compilador_yacc.py',121),
  ('Atribuicao -> ID = Exp','Atribuicao',3,'p_Atribuicao_exp','compilador_yacc.py',130),
  ('Atribuicao -> ID [ Exp ] = Exp','Atribuicao',6,'p_Atribuicao_expArray','compilador_yacc.py',140),
  ('Atribuicao -> ID = READ ( )','Atribuicao',5,'p_Atribuicao_read','compilador_yacc.py',149),
  ('Atribuicao -> ID [ Exp ] = READ ( )','Atribuicao',8,'p_Atribuicao_readArray','compilador_yacc.py',159),
  ('Condicao -> Condicao EQUALS Afirmacao','Condicao',3,'p_Condicao_igual','compilador_yacc.py',168),
  ('Condicao -> Condicao CONJ Afirmacao','Condicao',3,'p_Condicao_conj','compilador_yacc.py',172),
  ('Condicao -> Condicao DISJ Afirmacao','Condicao',3,'p_Condicao_disj','compilador_yacc.py',176),
  ('Condicao -> Condicao NOTEQUAL Afirmacao','Condicao',3,'p_Condicao_desigual','compilador_yacc.py',181),
  ('Condicao -> Afirmacao','Condicao',1,'p_Condicao_afirm','compilador_yacc.py',186),
  ('Afirmacao -> ! Afirmacao','Afirmacao',2,'p_Afirmacao_Negacao','compilador_yacc.py',191),
  ('Afirmacao -> TRUE','Afirmacao',1,'p_Afirmacao_True','compilador_yacc.py',196),
  ('Afirmacao -> FALSE','Afirmacao',1,'p_Afirmacao_False','compilador_yacc.py',201),
  ('Afirmacao -> Exp > Exp','Afirmacao',3,'p_Afirmacao_Greater','compilador_yacc.py',206),
  ('Afirmacao -> Exp < Exp','Afirmacao',3,'p_Afirmacao_Lower','compilador_yacc.py',211),
  ('Afirmacao -> Exp GREATEQUAL Exp','Afirmacao',3,'p_Afirmacao_GreaterEQ','compilador_yacc.py',216),
  ('Afirmacao -> Exp LOWEREQUAL Exp','Afirmacao',3,'p_Afirmacao_LowerEQ','compilador_yacc.py',221),
  ('Afirmacao -> Exp EQUALS Exp','Afirmacao',3,'p_Afirmacao_Equals','compilador_yacc.py',226),
  ('Afirmacao -> Exp NOTEQUAL Exp','Afirmacao',3,'p_Afirmacao_notEquals','compilador_yacc.py',232),
  ('Exp -> Exp + Termo','Exp',3,'p_Exp_add','compilador_yacc.py',238),
  ('Exp -> Exp - Termo','Exp',3,'p_Exp_sub','compilador_yacc.py',243),
  ('Exp -> Termo','Exp',1,'p_Exp','compilador_yacc.py',248),
  ('Termo -> Termo * Fator','Termo',3,'p_Termo_mul','compilador_yacc.py',253),
  ('Termo -> Termo / Fator','Termo',3,'p_Termo_div','compilador_yacc.py',258),
  ('Termo -> Termo % Fator','Termo',3,'p_Termo_mod','compilador_yacc.py',263),
  ('Termo -> Fator','Termo',1,'p_Termo','compilador_yacc.py',267),
  ('Fator -> ID [ Exp ]','Fator',4,'p_Fator_varArray','compilador_yacc.py',272),
  ('Fator -> NUM','Fator',1,'p_Fator_num','compilador_yacc.py',277),
  ('Fator -> ID','Fator',1,'p_Fator_var','compilador_yacc.py',281),
  ('Fator -> ( Exp )','Fator',3,'p_Fator','compilador_yacc.py',287),
]
